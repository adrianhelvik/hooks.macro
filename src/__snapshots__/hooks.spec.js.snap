// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Hooks macro â€º Skips globals: Skips globals 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const result = useAutoMemo(() => window.innerHeight);
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var result = (0, _react.useMemo)(function () {
    return window.innerHeight;
  }, []);
}
"
`;

exports[`Hooks macro â€º Skips internal bindings with omonims: Skips internal bindings with omonims 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const v = 12;
  const value = [1, 2, 3];
  const result = useAutoMemo(() => value.map(v => v * 2));
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var v = 12;
  var value = [1, 2, 3];
  var result = (0, _react.useMemo)(function () {
    return value.map(function (v) {
      return v * 2;
    });
  }, [value]);
}
"
`;

exports[`Hooks macro â€º Skips internal bindings: Skips internal bindings 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const value = [1, 2, 3];
  const result = useAutoMemo(() => value.map(v => v * 2));
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var value = [1, 2, 3];
  var result = (0, _react.useMemo)(function () {
    return value.map(function (v) {
      return v * 2;
    });
  }, [value]);
}
"
`;

exports[`Hooks macro â€º Skips internal const bindings with omonims: Skips internal const bindings with omonims 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const v = 12;
  const result = useAutoMemo(() => {
    const v = 42;
    return v;
  });
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var v = 12;
  var result = (0, _react.useMemo)(function () {
    var v = 42;
    return v;
  }, []);
}
"
`;

exports[`Hooks macro â€º Skips internal destructuring bindings with omonims: Skips internal destructuring bindings with omonims 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const v = 12;
  const value = [1, 2, 3];
  const result = useAutoMemo(() => {
    const [v] = value;
    return v;
  });
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var v = 12;
  var value = [1, 2, 3];
  var result = (0, _react.useMemo)(function () {
    var v = value[0];
    return v;
  }, [value]);
}
"
`;

exports[`Hooks macro â€º Skips out of component bindings: Skips out of component bindings 1`] = `
"
import { useAutoMemo } from './hooks.macro'

const value = { a: { b: { c: 12 }} };

function FakeComponent() {
  const result = useAutoMemo(() => value.a['b'].c);
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

var value = {
  a: {
    b: {
      c: 12
    }
  }
};

function FakeComponent() {
  var result = (0, _react.useMemo)(function () {
    return value.a['b'].c;
  }, []);
}
"
`;

exports[`Hooks macro â€º Throws if not called as function: Throws if not called as function 1`] = `
"
import { useAutoMemo } from './hooks.macro'

console.log(useAutoMemo);

      â†“ â†“ â†“ â†“ â†“ â†“

SyntaxError: ./hooks.macro: /Users/pier/Development/exp/hooks.macro/src/hooks.spec.js: useAutoMemo can only be used a function, and can not be passed around as an argument.
[0m [90m 1 | [39m[36mimport[39m { useAutoMemo } from [32m'./hooks.macro'[39m[0m
[0m [90m 2 | [39m[0m
[0m[31m[1m>[22m[39m[90m 3 | [39mconsole[33m.[39mlog(useAutoMemo)[33m;[39m[0m
[0m [90m   | [39m            [31m[1m^[22m[39m[0m
"
`;

exports[`Hooks macro â€º Works with external obj returning arrow: Works with external obj returning arrow 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const value = { a: { b: { c: 12 }} };
  const result = useAutoMemo(() => value.a['b'].c);
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var value = {
    a: {
      b: {
        c: 12
      }
    }
  };
  var result = (0, _react.useMemo)(function () {
    return value.a['b'].c;
  }, [value]);
}
"
`;

exports[`Hooks macro â€º Works with external obj: Works with external obj 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const value = { a: { b: { c: 12 }} };
  const result = useAutoMemo(value.a['b'].c);
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var value = {
    a: {
      b: {
        c: 12
      }
    }
  };
  var result = (0, _react.useMemo)(function () {
    return value.a['b'].c;
  }, [value]);
}
"
`;

exports[`Hooks macro â€º Works with external value returning arrow: Works with external value returning arrow 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const value = 12;
  const result = useAutoMemo(() => value);
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var value = 12;
  var result = (0, _react.useMemo)(function () {
    return value;
  }, [value]);
}
"
`;

exports[`Hooks macro â€º Works with external value: Works with external value 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const value = 12;
  const result = useAutoMemo(value);
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var value = 12;
  var result = (0, _react.useMemo)(function () {
    return value;
  }, [value]);
}
"
`;

exports[`Hooks macro â€º Works with function calls: Works with function calls 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  function callback() {}
  const result = useAutoMemo(() => callback());
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  function callback() {}

  var result = (0, _react.useMemo)(function () {
    return callback();
  }, [callback]);
}
"
`;

exports[`Hooks macro â€º Works with function expressions: Works with function expressions 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const value = 12;
  const result = useAutoMemo(function hallo() {
    return value * 2;
  });
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var value = 12;
  var result = (0, _react.useMemo)(function hallo() {
    return value * 2;
  }, [value]);
}
"
`;

exports[`Hooks macro â€º Works with multiple identical expressions: Works with multiple identical expressions 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const value = 12;
  const result = useAutoMemo(value * value);
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var value = 12;
  var result = (0, _react.useMemo)(function () {
    return value * value;
  }, [value]);
}
"
`;

exports[`Hooks macro â€º Works with null returning arrow: Works with null returning arrow 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const result = useAutoMemo(() => null);
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var result = (0, _react.useMemo)(function () {
    return null;
  }, []);
}
"
`;

exports[`Hooks macro â€º Works with null: Works with null 1`] = `
"
import { useAutoMemo } from './hooks.macro'

function FakeComponent() {
  const result = useAutoMemo(null);
}

      â†“ â†“ â†“ â†“ â†“ â†“

\\"use strict\\";

var _react = require(\\"react\\");

function FakeComponent() {
  var result = (0, _react.useMemo)(function () {
    return null;
  }, []);
}
"
`;
